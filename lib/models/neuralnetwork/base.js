// Generated by CoffeeScript 1.8.0
(function() {
  var Matrix, Sigmoid;

  Matrix = require('../../math/matrix').Matrix;

  module.exports.Sigmoid = Sigmoid = (function() {
    function Sigmoid(layer_name, dim, basis_function) {
      this.layer_name = layer_name;
      this.dim = dim;
      this.basis_function = basis_function != null ? basis_function : null;
      return;
    }

    Sigmoid.prototype.w = function() {
      return this.w;
    };

    Sigmoid.prototype.dim = function() {
      return this.dim;
    };

    Sigmoid.prototype.phi = function() {};

    Sigmoid.prototype.setup = function(n_in) {
      if (n_in == null) {
        n_in = 0;
      }
      return this.w = Matrix.zeros(n_in, this.dim);
    };

    Sigmoid.prototype.fprop = function(n_in) {
      return this.sigmoid(Matrix.dot(n_in, this.w).matrix);
    };

    Sigmoid.prototype.classify = function(n_in) {
      if (this.fprop(n_in) >= 0.5) {
        return 1;
      } else {
        return 0;
      }
    };

    Sigmoid.prototype.sigmoid = function(x) {
      return 1 / (1 + Math.exp(-x));
    };

    return Sigmoid;

  })();

}).call(this);
