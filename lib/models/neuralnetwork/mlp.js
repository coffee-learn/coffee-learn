// Generated by CoffeeScript 1.8.0
(function() {
  var MLP, Matrix;

  Matrix = require('../../math/matrix').Matrix;

  module.exports.MLP = MLP = (function() {
    function MLP(layers, nvis) {
      this.layers = layers;
      this.nvis = nvis;
      this.setup();
    }

    MLP.prototype.layers = function() {
      return this.layers;
    };

    MLP.prototype.setup = function() {
      var i, n_in, _i, _ref, _results;
      console.log('setup');
      _results = [];
      for (i = _i = 0, _ref = this.layers.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        if (i === 0) {
          _results.push(this.layers[i].setup(n_in = this.nvis));
        } else {
          _results.push(this.layers[i].setup(n_in = this.layers[i - 1].dim));
        }
      }
      return _results;
    };

    MLP.prototype.predict = function(n_in) {
      var layer, _i, _len, _ref;
      _ref = this.layers;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        layer = _ref[_i];
        n_in = layer.fprop(n_in);
      }
      return n_in;
    };

    return MLP;

  })();

}).call(this);
